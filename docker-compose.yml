version: "3.9"
services:
  database:
    image: postgres
    container_name: starter-db
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - 5959:5432
    volumes:
      - ./pg-data:/var/lib/postgresql/data
    networks:
      - starter_internal

  redis:
    image: redis:7.0.11-alpine
    container_name: ${PROJECT_NAME}-redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASS}
    volumes:
      - ./cache:/redis-data
    networks:
      - starter_internal
      - starter_web

  server:
    build:
      dockerfile: Dockerfile
      context: ./api
      # Only will build development stage from our dockerfile
      #target: build
    container_name: ${PROJECT_NAME}-server
    restart: always
    env_file:
      - ./api/.env
    # Run a command against the development stage of the image
    #command: npm run start:dev
    ports:
      - "8000:8000"
    volumes:
      - ./public/uploads:/public/uploads
    depends_on:
      - database
    networks:
      - starter_internal
      - starter_api

  adminer:
    image: adminer
    restart: always
    container_name: ${PROJECT_NAME}-adminer
    ports:
      - 8080:8080
    networks:
      - starter_internal
      - starter_web

  website:
    build:
      context: ./website
      dockerfile: Dockerfile
    command: "npm start"
    container_name: ${PROJECT_NAME}-website
    ports:
      - 3000:3000
    env_file:
      - ./website/.env
    depends_on:
      - server
    networks:
      - starter_api

  admin-panel:
    container_name: ${PROJECT_NAME}-admin-panel
    build:
      context: ./admin
      dockerfile: Dockerfile
    command: "npm run preview"
    ports:
      - 3001:8000
    env_file:
      - .env
    depends_on:
      - server
    networks:
      - starter_api

volumes:
  starter_pgdata:
  pgadmin-data:

networks:
  starter_internal:
    internal: true
  starter_api:
  starter_web:
